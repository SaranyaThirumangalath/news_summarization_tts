API Documentation

Endpoint: /analyze-news
Method: POST

Description

This endpoint processes a search query to analyze news articles. It performs the following tasks:

* Fetches news articles using News API and scrapes additional metadata using BeautifulSoup.
* Cleans text and performs sentiment analysis (using NLTK's VADER) and topic extraction.
* Conducts a comparative analysis across the articles.
* Generates a final sentiment summary in Hindi and converts it to audio (using gTTS).
* Trims the analysis and refines it with additional insights via an OpenAI agent.


Request

Content-Type: application/json


Body Parameters:


query (string, required): The company name or topic for which to fetch news.
 Example: "Tesla"


page_size (integer, optional): The number of articles to fetch (default is 10).
 Example: 10


Example Request Body:
{
  "query": "Tesla",
  "page_size": 10
}

Response

Content-Type: application/json


Body: A JSON object containing the following fields:


Company (string): The company or topic used in the query.


Articles (array): A list of articles. Each article is an object with:


Title (string): The title of the article.


Summary (string): A brief summary of the article.


Sentiment (string): The sentiment of the article ("Positive", "Negative", or "Neutral").


Topics (array): A list of key topics extracted from the article.


URL (string): The link to the original article.


Comparative Sentiment Score (object): Contains:


Sentiment Distribution (object): Counts of articles by sentiment.


Coverage Differences (array): Comparisons between articles with different sentiments, each with:


Comparison (string): A description comparing two articles.


Impact (string): The potential effect on investor sentiment.


Topic Overlap (object): Common topics (and if applicable, unique topics).


Final Sentiment Analysis (string): A Hindi summary of the overall sentiment.


Audio (string): A Base64 encoded MP3 file of the Hindi text-to-speech summary.


Refined Business Analysis (string): Additional business insights generated by the OpenAI agent.


Example Response:
{
  "Company": "Tesla",
  "Articles": [
    {
      "Title": "Tesla's New Model Breaks Sales Records",
      "Summary": "Tesla's latest EV sees record sales in Q3...",
      "Sentiment": "Positive",
      "Topics": ["Electric Vehicles", "Innovation", "Sales"],
      "URL": "https://example.com/article1"
    },
    {
      "Title": "Regulatory Scrutiny on Tesla's Self-Driving Tech",
      "Summary": "Regulators have raised concerns over Tesla’s self-driving technology...",
      "Sentiment": "Negative",
      "Topics": ["Regulations", "Technology", "Safety"],
      "URL": "https://example.com/article2"
    }
    // ... other articles ...
  ],
  "Comparative Sentiment Score": {
    "Sentiment Distribution": { "Positive": 5, "Negative": 3, "Neutral": 2 },
    "Coverage Differences": [
      {
        "Comparison": "Article 1 is Positive and focuses on Electric Vehicles, Innovation, Sales, while Article 2 is Negative and focuses on Regulations, Technology, Safety.",
        "Impact": "This contrast may affect investor sentiment differently."
      }
    ],
    "Topic Overlap": { "Common Topics": ["Electric Vehicles"] }
  },
  "Final Sentiment Analysis": "समाचार कवरेज संतुलित प्रतीत होता है।",
  "Audio": "Base64EncodedAudioString",
  "Refined Business Analysis": "Refined business insights from OpenAI..."
}

